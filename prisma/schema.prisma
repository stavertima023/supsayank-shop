// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Shop models for Supsayank shop

enum Size {
  XS
  S
  M
  L
  XL
  XXL
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  carts     Cart[]
  orders    Order[]
}

model Brand {
  id        String    @id @default(cuid())
  name      String
  slug      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Category {
  id        String    @id @default(cuid())
  name      String
  slug      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Product {
  id             String          @id @default(cuid())
  title          String
  slug           String          @unique
  description    String?
  priceCents     Int
  currency       String          @default("USD")
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt

  brandId        String
  categoryId     String
  brand          Brand           @relation(fields: [brandId], references: [id], onDelete: Cascade)
  category       Category        @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  images         ProductImage[]
  variants       ProductVariant[]
  orderItems     OrderItem[]
  cartItems      CartItem[]
}

model ProductImage {
  id        String   @id @default(cuid())
  url       String
  alt       String?
  index     Int      @default(0)
  productId String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model ProductVariant {
  id         String   @id @default(cuid())
  productId  String
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  size       Size?
  color      String?
  sku        String   @unique
  stock      Int      @default(0)

  orderItems OrderItem[]
  cartItems  CartItem[]
}

model Cart {
  id         String     @id @default(cuid())
  sessionId  String?    @unique
  userId     String?
  user       User?      @relation(fields: [userId], references: [id], onDelete: SetNull)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  items      CartItem[]
}

model CartItem {
  id              String          @id @default(cuid())
  cartId          String
  cart            Cart            @relation(fields: [cartId], references: [id], onDelete: Cascade)
  productId       String
  product         Product         @relation(fields: [productId], references: [id], onDelete: Cascade)
  variantId       String?
  variant         ProductVariant? @relation(fields: [variantId], references: [id], onDelete: SetNull)
  quantity        Int             @default(1)
  unitPriceCents  Int
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt

  @@unique([cartId, productId, variantId])
}

model Order {
  id            String      @id @default(cuid())
  userId        String?
  user          User?       @relation(fields: [userId], references: [id], onDelete: SetNull)
  email         String
  name          String
  addressLine1  String
  addressLine2  String?
  city          String
  region        String?
  postalCode    String
  country       String
  phone         String?
  totalCents    Int
  currency      String       @default("USD")
  status        String       @default("created")
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  items         OrderItem[]
}

model OrderItem {
  id              String          @id @default(cuid())
  orderId         String
  order           Order           @relation(fields: [orderId], references: [id], onDelete: Cascade)
  productId       String
  product         Product         @relation(fields: [productId], references: [id], onDelete: Cascade)
  variantId       String?
  variant         ProductVariant? @relation(fields: [variantId], references: [id], onDelete: SetNull)
  quantity        Int             @default(1)
  unitPriceCents  Int
}
